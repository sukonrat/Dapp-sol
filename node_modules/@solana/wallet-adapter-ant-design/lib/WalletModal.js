var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { useWallet } from '@solana/wallet-adapter-react';
import { Button, Menu, Modal } from 'antd';
import React, { useCallback } from 'react';
import { useWalletModal } from './useWalletModal';
import { WalletIcon } from './WalletIcon';
export const WalletModal = (_a) => {
    var { title = 'Select your wallet' } = _a, props = __rest(_a, ["title"]);
    const { wallets, select } = useWallet();
    const { visible, setVisible } = useWalletModal();
    const onCancel = useCallback(() => setVisible(false), [setVisible]);
    return (React.createElement(Modal, Object.assign({ title: title, visible: visible, centered: true, onCancel: onCancel, footer: null, width: 320, bodyStyle: { padding: 0 } }, props),
        React.createElement(Menu, { style: {
                borderRight: 0,
            } }, wallets.map((wallet) => (React.createElement(Menu.Item, { key: wallet.name, style: {
                margin: 0,
                padding: 0,
                paddingLeft: 0,
                paddingRight: 0,
                height: 44,
                lineHeight: '44px',
                boxShadow: 'inset 0 -1px 0 0 ' + 'rgba(255, 255, 255, 0.1)',
            } },
            React.createElement(Button, { onClick: (event) => {
                    select(wallet.name);
                    setVisible(false);
                }, icon: React.createElement(WalletIcon, { wallet: wallet, style: { width: 24, height: 24, marginLeft: 8 } }), type: "text", style: {
                    height: 44,
                    paddingLeft: 24,
                    display: 'flex',
                    flexDirection: 'row-reverse',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                }, block: true }, wallet.name)))))));
};
//# sourceMappingURL=WalletModal.js.map