{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { Button } from 'antd';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon';\nexport const WalletDisconnectButton = _a => {\n  var {\n    type = 'primary',\n    size = 'large',\n    children,\n    disabled,\n    onClick\n  } = _a,\n      props = __rest(_a, [\"type\", \"size\", \"children\", \"disabled\", \"onClick\"]);\n\n  const {\n    wallet,\n    disconnect,\n    disconnecting\n  } = useWallet();\n  const handleClick = useCallback(event => {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) disconnect().catch(() => {});\n  }, [onClick, disconnect]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (disconnecting) return 'Disconnecting ...';\n    if (wallet) return 'Disconnect';\n    return 'Disconnect Wallet';\n  }, [children, disconnecting, wallet]);\n  return React.createElement(Button, Object.assign({\n    onClick: handleClick,\n    disabled: disabled || !wallet,\n    icon: React.createElement(WalletIcon, {\n      wallet: wallet\n    }),\n    type: type,\n    size: size\n  }, props), content);\n};","map":{"version":3,"sources":["../src/WalletDisconnectButton.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAT,QAA0B,8BAA1B;AACA,SAAS,MAAT,QAAoC,MAApC;AACA,OAAO,KAAP,IAAuC,WAAvC,EAAoD,OAApD,QAAmE,OAAnE;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAM,sBAAsB,GAAqB,EAAD,IAOlD;MAPmD;AACpD,IAAA,IAAI,GAAG,SAD6C;AAEpD,IAAA,IAAI,GAAG,OAF6C;AAGpD,IAAA,QAHoD;AAIpD,IAAA,QAJoD;AAKpD,IAAA;AALoD,MAK7C,E;MACJ,KAAK,GAAA,MAAA,CAAA,EAAA,EAN4C,CAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,CAM5C,C;;AAER,QAAM;AAAE,IAAA,MAAF;AAAU,IAAA,UAAV;AAAsB,IAAA;AAAtB,MAAwC,SAAS,EAAvD;AAEA,QAAM,WAAW,GAAyC,WAAW,CAChE,KAAD,IAAU;AACN,QAAI,OAAJ,EAAa,OAAO,CAAC,KAAD,CAAP,CADP,CAEN;;AACA,QAAI,CAAC,KAAK,CAAC,gBAAX,EAA6B,UAAU,GAAG,KAAb,CAAmB,MAAK,CAAG,CAA3B;AAChC,GALgE,EAMjE,CAAC,OAAD,EAAU,UAAV,CANiE,CAArE;AASA,QAAM,OAAO,GAAG,OAAO,CAAC,MAAK;AACzB,QAAI,QAAJ,EAAc,OAAO,QAAP;AACd,QAAI,aAAJ,EAAmB,OAAO,mBAAP;AACnB,QAAI,MAAJ,EAAY,OAAO,YAAP;AACZ,WAAO,mBAAP;AACH,GALsB,EAKpB,CAAC,QAAD,EAAW,aAAX,EAA0B,MAA1B,CALoB,CAAvB;AAOA,SACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACH,IAAA,OAAO,EAAE,WADN;AAEH,IAAA,QAAQ,EAAE,QAAQ,IAAI,CAAC,MAFpB;AAGH,IAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,MAAA,MAAM,EAAE;AAAT,KAAX,CAHH;AAIH,IAAA,IAAI,EAAE,IAJH;AAKH,IAAA,IAAI,EAAE;AALH,GAAA,EAMC,KAND,CAAP,EAQK,OARL,CADJ;AAYH,CAtCM","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { Button } from 'antd';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon';\nexport const WalletDisconnectButton = (_a) => {\n    var { type = 'primary', size = 'large', children, disabled, onClick } = _a, props = __rest(_a, [\"type\", \"size\", \"children\", \"disabled\", \"onClick\"]);\n    const { wallet, disconnect, disconnecting } = useWallet();\n    const handleClick = useCallback((event) => {\n        if (onClick)\n            onClick(event);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        if (!event.defaultPrevented)\n            disconnect().catch(() => { });\n    }, [onClick, disconnect]);\n    const content = useMemo(() => {\n        if (children)\n            return children;\n        if (disconnecting)\n            return 'Disconnecting ...';\n        if (wallet)\n            return 'Disconnect';\n        return 'Disconnect Wallet';\n    }, [children, disconnecting, wallet]);\n    return (React.createElement(Button, Object.assign({ onClick: handleClick, disabled: disabled || !wallet, icon: React.createElement(WalletIcon, { wallet: wallet }), type: type, size: size }, props), content));\n};\n//# sourceMappingURL=WalletDisconnectButton.js.map"]},"metadata":{},"sourceType":"module"}