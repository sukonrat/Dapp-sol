{"ast":null,"code":"var _jsxFileName = \"/Users/sukonratkanjanasuttiyakorn/Documents/projects/dapp-scaffold/src/components/ConnectButton/index.tsx\";\nimport { useWalletModal } from \"@solana/wallet-adapter-ant-design\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { LABELS } from \"../../constants\";\nexport const ConnectButton = props => {\n  const {\n    setVisible\n  } = useWalletModal();\n  const {\n    connected,\n    connect,\n    select,\n    wallet,\n    wallets\n  } = useWallet();\n  const {\n    onClick,\n    children,\n    disabled,\n    allowWalletChange,\n    ...rest\n  } = props;\n  const handleChangeWalletButtonClick = useCallback(event => {\n    if (connected) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(event);\n      return;\n    }\n\n    setVisible(true);\n  }, [setVisible, onClick, connected]); // only show if wallet selected or user connected\n\n  const menu = /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, wallets.map(wallet => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: wallet.name,\n    onClick: () => select(wallet.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Change Wallet to \", wallet.name)));\n\n  if (!wallet || !allowWalletChange) {\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, rest, {\n      onClick: handleChangeWalletButtonClick,\n      disabled: connected && disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), connected ? props.children : LABELS.CONNECT_LABEL);\n  }\n\n  return /*#__PURE__*/React.createElement(Dropdown.Button, {\n    onClick: connected ? onClick : connect,\n    disabled: connected && disabled,\n    overlay: menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, LABELS.CONNECT_LABEL);\n};","map":{"version":3,"sources":["/Users/sukonratkanjanasuttiyakorn/Documents/projects/dapp-scaffold/src/components/ConnectButton/index.tsx"],"names":["useWalletModal","useWallet","Button","Dropdown","Menu","React","useCallback","LABELS","ConnectButton","props","setVisible","connected","connect","select","wallet","wallets","onClick","children","disabled","allowWalletChange","rest","handleChangeWalletButtonClick","event","menu","map","name","CONNECT_LABEL"],"mappings":";AAAA,SAASA,cAAT,QAA+B,mCAA/B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,MAAvC;AAEA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAQA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAA+B;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAiBV,cAAc,EAArC;AAEA,QAAM;AAAEW,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,MAA9B;AAAsCC,IAAAA;AAAtC,MAAkDd,SAAS,EAAjE;AACA,QAAM;AAAEe,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,iBAA/B;AAAkD,OAAGC;AAArD,MAA8DX,KAApE;AAEA,QAAMY,6BAAmE,GAAGf,WAAW,CACpFgB,KAAD,IAAW;AACT,QAAIX,SAAJ,EAAe;AACbK,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGM,KAAH,CAAP;AACA;AACD;;AACDZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAPoF,EAQrF,CAACA,UAAD,EAAaM,OAAb,EAAsBL,SAAtB,CARqF,CAAvF,CAN0D,CAiB1D;;AACA,QAAMY,IAAI,gBACR,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,CAACS,GAAR,CAAaV,MAAD,iBACX,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEA,MAAM,CAACW,IAAvB;AAA6B,IAAA,OAAO,EAAE,MAAMZ,MAAM,CAACC,MAAM,CAACW,IAAR,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoBX,MAAM,CAACW,IAD3B,CADD,CADH,CADF;;AAUA,MAAI,CAACX,MAAD,IAAW,CAACK,iBAAhB,EAAmC;AACjC,wBACE,oBAAC,MAAD,oBACMC,IADN;AAEE,MAAA,OAAO,EAAEC,6BAFX;AAGE,MAAA,QAAQ,EAAEV,SAAS,IAAIO,QAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKGP,SAAS,GAAGF,KAAK,CAACQ,QAAT,GAAoBV,MAAM,CAACmB,aALvC,CADF;AASD;;AAED,sBACE,oBAAC,QAAD,CAAU,MAAV;AACE,IAAA,OAAO,EAAEf,SAAS,GAAGK,OAAH,GAAaJ,OADjC;AAEE,IAAA,QAAQ,EAAED,SAAS,IAAIO,QAFzB;AAGE,IAAA,OAAO,EAAEK,IAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGhB,MAAM,CAACmB,aALV,CADF;AASD,CAjDM","sourcesContent":["import { useWalletModal } from \"@solana/wallet-adapter-ant-design\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { ButtonProps } from \"antd/lib/button\";\nimport React, { useCallback } from \"react\";\nimport { LABELS } from \"../../constants\";\n\nexport interface ConnectButtonProps\n  extends ButtonProps,\n    React.RefAttributes<HTMLElement> {\n  allowWalletChange?: boolean;\n}\n\nexport const ConnectButton = (props: ConnectButtonProps) => {\n  const { setVisible } = useWalletModal();\n\n  const { connected, connect, select, wallet, wallets } = useWallet();\n  const { onClick, children, disabled, allowWalletChange, ...rest } = props;\n\n  const handleChangeWalletButtonClick: React.MouseEventHandler<HTMLElement> = useCallback(\n    (event) => {\n      if (connected) {\n        onClick?.(event);\n        return;\n      }\n      setVisible(true);\n    },\n    [setVisible, onClick, connected]\n  );\n\n  // only show if wallet selected or user connected\n  const menu = (\n    <Menu>\n      {wallets.map((wallet) => (\n        <Menu.Item key={wallet.name} onClick={() => select(wallet.name)}>\n          Change Wallet to {wallet.name}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  if (!wallet || !allowWalletChange) {\n    return (\n      <Button\n        {...rest}\n        onClick={handleChangeWalletButtonClick}\n        disabled={connected && disabled}\n      >\n        {connected ? props.children : LABELS.CONNECT_LABEL}\n      </Button>\n    );\n  }\n\n  return (\n    <Dropdown.Button\n      onClick={connected ? onClick : connect}\n      disabled={connected && disabled}\n      overlay={menu}\n    >\n      {LABELS.CONNECT_LABEL}\n    </Dropdown.Button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}