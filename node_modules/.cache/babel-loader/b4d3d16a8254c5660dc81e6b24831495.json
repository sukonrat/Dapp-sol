{"ast":null,"code":"import { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolletWalletAdapter } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\nexport var WalletName;\n\n(function (WalletName) {\n  WalletName[\"Ledger\"] = \"Ledger\";\n  WalletName[\"MathWallet\"] = \"MathWallet\";\n  WalletName[\"Phantom\"] = \"Phantom\";\n  WalletName[\"Solflare\"] = \"Solflare\";\n  WalletName[\"SolflareWeb\"] = \"Solflare (Web)\";\n  WalletName[\"Sollet\"] = \"Sollet\";\n  WalletName[\"Solong\"] = \"Solong\";\n  WalletName[\"Torus\"] = \"Torus\";\n})(WalletName || (WalletName = {}));\n\nexport const ICONS_URL = 'https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons';\nexport const getLedgerWallet = config => ({\n  name: WalletName.Ledger,\n  url: 'https://www.ledger.com',\n  icon: `${ICONS_URL}/ledger.svg`,\n  adapter: () => new LedgerWalletAdapter(config)\n});\nexport const getMathWallet = config => ({\n  name: WalletName.MathWallet,\n  url: 'https://mathwallet.org',\n  icon: `${ICONS_URL}/mathwallet.svg`,\n  adapter: () => new MathWalletWalletAdapter(config)\n});\nexport const getPhantomWallet = config => ({\n  name: WalletName.Phantom,\n  url: 'https://www.phantom.app',\n  icon: `${ICONS_URL}/phantom.png`,\n  adapter: () => new PhantomWalletAdapter(config)\n});\nexport const getSolflareWallet = config => ({\n  name: WalletName.Solflare,\n  url: 'https://solflare.com',\n  icon: `${ICONS_URL}/solflare.svg`,\n  adapter: () => new SolflareWalletAdapter(config)\n});\nexport const getSolflareWebWallet = config => ({\n  name: WalletName.SolflareWeb,\n  url: 'https://solflare.com',\n  icon: `${ICONS_URL}/solflare.svg`,\n  adapter: () => new SolletWalletAdapter(Object.assign(Object.assign({}, config), {\n    provider: (config === null || config === void 0 ? void 0 : config.provider) || 'https://solflare.com/access-wallet'\n  }))\n});\nexport const getSolletWallet = config => ({\n  name: WalletName.Sollet,\n  url: 'https://www.sollet.io',\n  icon: `${ICONS_URL}/sollet.svg`,\n  adapter: () => new SolletWalletAdapter(config)\n});\nexport const getSolongWallet = config => ({\n  name: WalletName.Solong,\n  url: 'https://solongwallet.com',\n  icon: `${ICONS_URL}/solong.png`,\n  adapter: () => new SolongWalletAdapter(config)\n});\nexport const getTorusWallet = config => ({\n  name: WalletName.Torus,\n  url: 'https://tor.us',\n  icon: `${ICONS_URL}/torus.svg`,\n  adapter: () => new TorusWalletAdapter(config)\n});","map":{"version":3,"sources":["../src/wallets.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolletWalletAdapter } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\nexport var WalletName;\n(function (WalletName) {\n    WalletName[\"Ledger\"] = \"Ledger\";\n    WalletName[\"MathWallet\"] = \"MathWallet\";\n    WalletName[\"Phantom\"] = \"Phantom\";\n    WalletName[\"Solflare\"] = \"Solflare\";\n    WalletName[\"SolflareWeb\"] = \"Solflare (Web)\";\n    WalletName[\"Sollet\"] = \"Sollet\";\n    WalletName[\"Solong\"] = \"Solong\";\n    WalletName[\"Torus\"] = \"Torus\";\n})(WalletName || (WalletName = {}));\nexport const ICONS_URL = 'https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons';\nexport const getLedgerWallet = (config) => ({\n    name: WalletName.Ledger,\n    url: 'https://www.ledger.com',\n    icon: `${ICONS_URL}/ledger.svg`,\n    adapter: () => new LedgerWalletAdapter(config),\n});\nexport const getMathWallet = (config) => ({\n    name: WalletName.MathWallet,\n    url: 'https://mathwallet.org',\n    icon: `${ICONS_URL}/mathwallet.svg`,\n    adapter: () => new MathWalletWalletAdapter(config),\n});\nexport const getPhantomWallet = (config) => ({\n    name: WalletName.Phantom,\n    url: 'https://www.phantom.app',\n    icon: `${ICONS_URL}/phantom.png`,\n    adapter: () => new PhantomWalletAdapter(config),\n});\nexport const getSolflareWallet = (config) => ({\n    name: WalletName.Solflare,\n    url: 'https://solflare.com',\n    icon: `${ICONS_URL}/solflare.svg`,\n    adapter: () => new SolflareWalletAdapter(config),\n});\nexport const getSolflareWebWallet = (config) => ({\n    name: WalletName.SolflareWeb,\n    url: 'https://solflare.com',\n    icon: `${ICONS_URL}/solflare.svg`,\n    adapter: () => new SolletWalletAdapter(Object.assign(Object.assign({}, config), { provider: (config === null || config === void 0 ? void 0 : config.provider) || 'https://solflare.com/access-wallet' })),\n});\nexport const getSolletWallet = (config) => ({\n    name: WalletName.Sollet,\n    url: 'https://www.sollet.io',\n    icon: `${ICONS_URL}/sollet.svg`,\n    adapter: () => new SolletWalletAdapter(config),\n});\nexport const getSolongWallet = (config) => ({\n    name: WalletName.Solong,\n    url: 'https://solongwallet.com',\n    icon: `${ICONS_URL}/solong.png`,\n    adapter: () => new SolongWalletAdapter(config),\n});\nexport const getTorusWallet = (config) => ({\n    name: WalletName.Torus,\n    url: 'https://tor.us',\n    icon: `${ICONS_URL}/torus.svg`,\n    adapter: () => new TorusWalletAdapter(config),\n});\n//# sourceMappingURL=wallets.js.map"]},"metadata":{},"sourceType":"module"}